{
	"info": {
		"_postman_id": "9caac8a9-1d5d-44a1-a1c0-3f51c026f276",
		"name": "Dummy Rest  Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "Get employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee81eb14-4e00-4e20-a1cc-2ba6a1eb2390",
								"exec": [
									"//Checking status code as 200",
									"var schema = {",
									"  \"items\": {",
									"    \"type\": \"boolean\"",
									"  }",
									"};",
									"",
									"var data1 = [true, false];",
									"var data2 = [true, 123];",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(data1, schema)).to.be.true;",
									"  pm.expect(tv4.validate(data2, schema)).to.be.true;",
									"});var schema = {",
									"  \"items\": {",
									"    \"type\": \"boolean\"",
									"  }",
									"};",
									"",
									"var data1 = [true, false];",
									"var data2 = [true, 123];",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(data1, schema)).to.be.true;",
									"  pm.expect(tv4.validate(data2, schema)).to.be.true;",
									"});pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});pm.test(\"Checking Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//Checking response contain an array list",
									"pm.test(\"Checking body matches with the values\", function () {",
									"      var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].id).to.eql(\"88705\");",
									"     pm.expect(jsonData[0].employee_name).to.eql(\"urtyu\");",
									"      pm.expect(jsonData[0].employee_salary).to.eql(\"123\");",
									"       pm.expect(jsonData[0].employee_age).to.eql(\"23\");",
									"    });",
									"",
									"//Checking response contain an array2 list",
									"pm.test(\"Checking body matches with the secong array\", function () {",
									"      var jsonData = pm.response.json();",
									"    pm.expect(jsonData[1].id).to.eql(\"88706\");",
									"     pm.expect(jsonData[1].employee_name).to.eql(\"anshuman-Sherma\");",
									"      pm.expect(jsonData[1].employee_salary).to.eql(\"232\");",
									"       pm.expect(jsonData[1].employee_age).to.eql(\"27\");",
									"});",
									"",
									"//Checking Thirs array list",
									"pm.test(\"Checking body matches with the third array\", function () {",
									"      var jsonData = pm.response.json();",
									"    pm.expect(jsonData[2].id).to.eql(\"88707\");",
									"     pm.expect(jsonData[2].employee_name).to.eql(\"AnshumanKRESx\");",
									"      pm.expect(jsonData[2].employee_salary).to.eql(\"100062627\");",
									"       pm.expect(jsonData[2].employee_age).to.eql(\"278\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dummy.restapiexample.com/api/v1/employees",
							"protocol": "http",
							"host": [
								"dummy",
								"restapiexample",
								"com"
							],
							"path": [
								"api",
								"v1",
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "Getting employee by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5868622-17a4-4846-a84d-3d8168a95f0e",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"false\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dummy.restapiexample.com/api/v1/employee/1",
							"protocol": "http",
							"host": [
								"dummy",
								"restapiexample",
								"com"
							],
							"path": [
								"api",
								"v1",
								"employee",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}