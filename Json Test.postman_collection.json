{
	"info": {
		"_postman_id": "ed02355e-c56d-4103-aa27-b2adbc8a695c",
		"name": "Json Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "json",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b71971f1-cd0e-4605-baaf-12cd6e72dcf1",
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"size\");",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"size\");",
							"});",
							"",
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {",
							"    console.log(response.json());",
							"});",
							"",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.body(\"response_body_string\");",
							"});",
							"pm.test(\"Status code name has string\", function () {",
							"    pm.response.to.have.status(\"Created\");",
							"});",
							"var schema = {",
							"  \"items\": {",
							"    \"type\": \"boolean\"",
							"  }",
							"};",
							"",
							"var data1 = [true, false];",
							"var data2 = [true, 123];",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(data1, schema)).to.be.true;",
							"  pm.expect(tv4.validate(data2, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://validate.jsontest.com/?json=%5BJSON-code-to-validate%5D",
					"protocol": "http",
					"host": [
						"validate",
						"jsontest",
						"com"
					],
					"path": [
						""
					],
					"query": [
						{
							"key": "json",
							"value": "%5BJSON-code-to-validate%5D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "json00",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://date.jsontest.com/",
					"protocol": "http",
					"host": [
						"date",
						"jsontest",
						"com"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		}
	]
}